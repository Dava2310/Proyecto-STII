/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clases;

import javax.swing.JOptionPane;
import java.awt.Color;
import logica.proveedor;

/**
 *
 * @author DANIEL
 */
public class ModificarEliminarProveedor extends javax.swing.JFrame {

    /**
     * Creates new form CreacionProveedor
     */
    int modo_busqueda = 0;
    //MODO BUSQUEDA = 0 - CONSULTA POR CODIGO
    //MODO BUSQUEDA = 1 - CONSULTA POR IDENTIFICACION
    //MODO BUSQUEDA = 2 - CONSULTA POR RAZON SOCIAL
    proveedor p = new proveedor();
    String ultimo_buscado = "";
    ConsultarProveedor CP = new ConsultarProveedor();
    boolean edicion = false;
    TipoConsultaProveedor TCP;

    public ModificarEliminarProveedor() {
        initComponents();
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelDeIdentificacion = new javax.swing.JPanel();
        IdentificacionProveedor = new javax.swing.JLabel();
        FotoIdentificacion = new javax.swing.JLabel();
        CodigoL = new javax.swing.JLabel();
        Codigotxt = new javax.swing.JTextField();
        IdentificacionL = new javax.swing.JLabel();
        IdentificacionCB = new javax.swing.JComboBox<>();
        Identificaciontxt = new javax.swing.JTextField();
        RazonSocialL = new javax.swing.JLabel();
        RazonSocialtxt = new javax.swing.JTextField();
        DireccionL = new javax.swing.JLabel();
        Direcciontxt = new javax.swing.JTextField();
        TlfL = new javax.swing.JLabel();
        TlfCB = new javax.swing.JComboBox<>();
        Tlftxt = new javax.swing.JTextField();
        MailL = new javax.swing.JLabel();
        Mailtxt = new javax.swing.JTextField();
        ActividadL = new javax.swing.JLabel();
        ActividadCB = new javax.swing.JComboBox<>();
        PanelBancario = new javax.swing.JPanel();
        NameBnfL = new javax.swing.JLabel();
        NameBnftxt = new javax.swing.JTextField();
        IDL = new javax.swing.JLabel();
        IDCB = new javax.swing.JComboBox<>();
        MailBnfL = new javax.swing.JLabel();
        MailBNFtxt = new javax.swing.JTextField();
        BancoL = new javax.swing.JLabel();
        NumCuentaL = new javax.swing.JLabel();
        NumCuentatxt = new javax.swing.JTextField();
        TCuentaL = new javax.swing.JLabel();
        IDtxt = new javax.swing.JTextField();
        MonedaL = new javax.swing.JLabel();
        MODL = new javax.swing.JLabel();
        InformacionBancariaL = new javax.swing.JLabel();
        LogoInformacionBancaria = new javax.swing.JLabel();
        NameAutL = new javax.swing.JLabel();
        NameAuttxt = new javax.swing.JTextField();
        IDAutL = new javax.swing.JLabel();
        IDAuttxt = new javax.swing.JTextField();
        BancoCB = new javax.swing.JComboBox<>();
        MODCB = new javax.swing.JComboBox<>();
        MonedaCB = new javax.swing.JComboBox<>();
        TCuentaCB = new javax.swing.JComboBox<>();
        PanelObservaciones = new javax.swing.JPanel();
        CancelarBT = new javax.swing.JButton();
        Actualizar = new javax.swing.JButton();
        BuscarBT = new javax.swing.JButton();
        EliminarBT = new javax.swing.JButton();
        HabilitarCambiosBT = new javax.swing.JButton();
        HabilitarBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        IdentificacionProveedor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        IdentificacionProveedor.setText("Identificación del Proveedor");

        FotoIdentificacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Imagen1.png"))); // NOI18N

        CodigoL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CodigoL.setText("Código (*)");

        Codigotxt.setEditable(false);
        Codigotxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        Codigotxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodigotxtActionPerformed(evt);
            }
        });

        IdentificacionL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        IdentificacionL.setText("Identificación (*)");

        IdentificacionCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "V", "E", "P", "J", "G" }));
        IdentificacionCB.setEnabled(false);

        Identificaciontxt.setEditable(false);
        Identificaciontxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        Identificaciontxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdentificaciontxtActionPerformed(evt);
            }
        });

        RazonSocialL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        RazonSocialL.setText("Razón Social (*)");

        RazonSocialtxt.setEditable(false);
        RazonSocialtxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        RazonSocialtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RazonSocialtxtActionPerformed(evt);
            }
        });

        DireccionL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        DireccionL.setText("Dirección");

        Direcciontxt.setEditable(false);
        Direcciontxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        TlfL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TlfL.setText("Teléfono");

        TlfCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0412", "0414", "0416", "0424", "0426" }));
        TlfCB.setEnabled(false);

        Tlftxt.setEditable(false);
        Tlftxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        MailL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MailL.setText("E-mail");

        Mailtxt.setEditable(false);
        Mailtxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        ActividadL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ActividadL.setText("Estado de Actividad");

        ActividadCB.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        ActividadCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        ActividadCB.setEnabled(false);

        javax.swing.GroupLayout PanelDeIdentificacionLayout = new javax.swing.GroupLayout(PanelDeIdentificacion);
        PanelDeIdentificacion.setLayout(PanelDeIdentificacionLayout);
        PanelDeIdentificacionLayout.setHorizontalGroup(
            PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDeIdentificacionLayout.createSequentialGroup()
                .addGroup(PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDeIdentificacionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(IdentificacionProveedor))
                    .addGroup(PanelDeIdentificacionLayout.createSequentialGroup()
                        .addComponent(FotoIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelDeIdentificacionLayout.createSequentialGroup()
                                .addComponent(TlfL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TlfCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Tlftxt, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MailL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Mailtxt))
                            .addGroup(PanelDeIdentificacionLayout.createSequentialGroup()
                                .addGroup(PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RazonSocialL)
                                    .addComponent(DireccionL))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RazonSocialtxt)
                                    .addComponent(Direcciontxt)))
                            .addGroup(PanelDeIdentificacionLayout.createSequentialGroup()
                                .addComponent(ActividadL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ActividadCB, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelDeIdentificacionLayout.createSequentialGroup()
                                .addComponent(CodigoL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Codigotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(IdentificacionL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(IdentificacionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Identificaciontxt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        PanelDeIdentificacionLayout.setVerticalGroup(
            PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDeIdentificacionLayout.createSequentialGroup()
                .addGroup(PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDeIdentificacionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(IdentificacionProveedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FotoIdentificacion))
                    .addGroup(PanelDeIdentificacionLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CodigoL)
                            .addComponent(Codigotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IdentificacionL)
                            .addComponent(IdentificacionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Identificaciontxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RazonSocialL)
                            .addComponent(RazonSocialtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DireccionL)
                            .addComponent(Direcciontxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TlfL)
                            .addComponent(TlfCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Tlftxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MailL)
                            .addComponent(Mailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelDeIdentificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ActividadL)
                    .addComponent(ActividadCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        NameBnfL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        NameBnfL.setText("Nombre del beneficiario (*)");

        NameBnftxt.setEditable(false);
        NameBnftxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        IDL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        IDL.setText("Identificación (*)");

        IDCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "V", "E", "P", "J", "G" }));
        IDCB.setEnabled(false);

        MailBnfL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MailBnfL.setText("E-mail del beneficiario");

        MailBNFtxt.setEditable(false);
        MailBNFtxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        BancoL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BancoL.setText("Banco (*)");

        NumCuentaL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        NumCuentaL.setText("Nº de Cuenta (*)");

        NumCuentatxt.setEditable(false);
        NumCuentatxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        TCuentaL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TCuentaL.setText("Tipo de cuenta (*)");

        IDtxt.setEditable(false);
        IDtxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        MonedaL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MonedaL.setText("Moneda");

        MODL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MODL.setText("MOD (*)");

        InformacionBancariaL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        InformacionBancariaL.setText("Información Bancaria");

        LogoInformacionBancaria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Imagen2.jpg"))); // NOI18N

        NameAutL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        NameAutL.setText("Nombre del Autorizado (*)");

        NameAuttxt.setEditable(false);
        NameAuttxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        IDAutL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        IDAutL.setText("Identificación del Autorizado (*)");

        IDAuttxt.setEditable(false);
        IDAuttxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        BancoCB.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        BancoCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MERCANTIL BANCO UNIVERSAL", "BANCO DE VENEZUELA S.A BANCO UNIVERSAL", "VENEZOLANO DE CREDITO S.A BANCO UNIVERSAL", "BANCO PROVINCIAL S.A BANCO UNIVERSAL", "BANCO DEL CARIBE S.A C.A", "BANCO EXTERIOR S.A", "BANCO OCCIDENTAL DE DESCUENTO S.A C.A", "BANCO CARONI C.A BANCO UNIVERSAL", "BANESCO BANCO UNIVERSAL", "BANCO SOFITASA", "BANCO PLAZA", "BANCO DE COMERCIO EXTERIOR", "FONDO COMUN C.A BANCO UNIVERSAL", "100% BANCO, BANCO UNIVERSAL C.A", "DEL SUR BANCO UNIVERSAL, C.A", "BANCO DEL TESORO ", "BANCO AGRICOLA DE VENEZUELA C.A", "BANCRECER S.A BANCO MICROFINANCIERO", "MIBANCO BANCO DE DESARROLLO", "BANCO ACTIVO C.A", "BANCA AMIGA BANCO MICROFINANCIERO", "BANCO BICENTENARIO BANCO UNIVERSAL C.A", "BANCO DE LA FUERZA ARMADA NACIONAL BOLIVARIANA", "BANCO NACIONAL DE CREDITO ", " " }));
        BancoCB.setEnabled(false);

        MODCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cuenta Propia", "Cuenta Nueva", "Cuenta Autorizada" }));
        MODCB.setEnabled(false);
        MODCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MODCBActionPerformed(evt);
            }
        });

        MonedaCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BS", "$" }));
        MonedaCB.setEnabled(false);

        TCuentaCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cuenta Ahorros", "Cuenta Corriente", "Cuenta Maxima", "Cuenta Moneda Extranjera" }));
        TCuentaCB.setEnabled(false);

        javax.swing.GroupLayout PanelBancarioLayout = new javax.swing.GroupLayout(PanelBancario);
        PanelBancario.setLayout(PanelBancarioLayout);
        PanelBancarioLayout.setHorizontalGroup(
            PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBancarioLayout.createSequentialGroup()
                .addComponent(LogoInformacionBancaria, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PanelBancarioLayout.createSequentialGroup()
                        .addComponent(NameBnfL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NameBnftxt))
                    .addGroup(PanelBancarioLayout.createSequentialGroup()
                        .addGroup(PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PanelBancarioLayout.createSequentialGroup()
                                .addComponent(BancoL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BancoCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelBancarioLayout.createSequentialGroup()
                                .addComponent(IDL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IDCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IDtxt)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelBancarioLayout.createSequentialGroup()
                                .addComponent(MailBnfL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MailBNFtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                            .addGroup(PanelBancarioLayout.createSequentialGroup()
                                .addComponent(NumCuentaL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(NumCuentatxt))))
                    .addGroup(PanelBancarioLayout.createSequentialGroup()
                        .addComponent(TCuentaL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TCuentaCB, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MODL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MODCB, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MonedaL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MonedaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelBancarioLayout.createSequentialGroup()
                        .addComponent(NameAutL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NameAuttxt))
                    .addGroup(PanelBancarioLayout.createSequentialGroup()
                        .addComponent(IDAutL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IDAuttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(PanelBancarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InformacionBancariaL)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelBancarioLayout.setVerticalGroup(
            PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBancarioLayout.createSequentialGroup()
                .addComponent(InformacionBancariaL)
                .addGap(7, 7, 7)
                .addGroup(PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LogoInformacionBancaria)
                    .addGroup(PanelBancarioLayout.createSequentialGroup()
                        .addGroup(PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NameBnfL)
                            .addComponent(NameBnftxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IDCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MailBnfL)
                            .addComponent(MailBNFtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IDL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BancoL)
                            .addComponent(NumCuentaL)
                            .addComponent(NumCuentatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BancoCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TCuentaL)
                            .addComponent(MODL)
                            .addComponent(MonedaL)
                            .addComponent(MODCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MonedaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TCuentaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NameAutL)
                            .addComponent(NameAuttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelBancarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IDAutL)
                            .addComponent(IDAuttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CancelarBT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CancelarBT.setText("CANCELAR");
        CancelarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarBTActionPerformed(evt);
            }
        });

        Actualizar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Actualizar.setText("Actualizar");
        Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarActionPerformed(evt);
            }
        });

        BuscarBT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BuscarBT.setText("Buscar");
        BuscarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarBTActionPerformed(evt);
            }
        });

        EliminarBT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        EliminarBT.setText("Inhabilitar");
        EliminarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarBTActionPerformed(evt);
            }
        });

        HabilitarCambiosBT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        HabilitarCambiosBT.setText("Habilitar Edicion");
        HabilitarCambiosBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HabilitarCambiosBTActionPerformed(evt);
            }
        });

        HabilitarBT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        HabilitarBT.setText("Habilitar");
        HabilitarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HabilitarBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelObservacionesLayout = new javax.swing.GroupLayout(PanelObservaciones);
        PanelObservaciones.setLayout(PanelObservacionesLayout);
        PanelObservacionesLayout.setHorizontalGroup(
            PanelObservacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelObservacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BuscarBT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HabilitarCambiosBT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Actualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EliminarBT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HabilitarBT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CancelarBT, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PanelObservacionesLayout.setVerticalGroup(
            PanelObservacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelObservacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelObservacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelObservacionesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(PanelObservacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(CancelarBT, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BuscarBT, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HabilitarCambiosBT, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EliminarBT, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(HabilitarBT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelDeIdentificacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelBancario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelObservaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelDeIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelBancario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CodigotxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodigotxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CodigotxtActionPerformed

    private void RazonSocialtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RazonSocialtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RazonSocialtxtActionPerformed

    private void ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarActionPerformed
        if (edicion == true && !(Codigotxt.getText().equals("")) && !(Identificaciontxt.getText().equals("")) && !(RazonSocialtxt.getText().equals(""))) {
            //Se almacenan todos los datos ingresados por el usuario
            String codigo = Codigotxt.getText();
            String identificacion = IdentificacionCB.getSelectedItem().toString();
            identificacion += Identificaciontxt.getText();
            String razon_social = RazonSocialtxt.getText();
            String direccion = Direcciontxt.getText();
            String telefono = TlfCB.getSelectedItem().toString();
            telefono += Tlftxt.getText();
            String email = Mailtxt.getText();
            String name_beneficiario = NameBnftxt.getText();
            String id_beneficiario = IDCB.getSelectedItem().toString();
            id_beneficiario += IDtxt.getText();
            String mail_beneficiario = MailBNFtxt.getText();
            String banco = BancoCB.getSelectedItem().toString();
            String num_cuenta = NumCuentatxt.getText();
            String tipo_cuenta = TCuentaCB.getSelectedItem().toString();
            String mod_cuenta = MODCB.getSelectedItem().toString();
            String moneda = MonedaCB.getSelectedItem().toString();
            String nombre_autorizado = NameAuttxt.getText();
            String id_autorizado = IDAuttxt.getText();

            p.updateProveedorCodigo(codigo, identificacion, razon_social, direccion, telefono, email, name_beneficiario, id_beneficiario, mail_beneficiario, banco, num_cuenta, tipo_cuenta, mod_cuenta, moneda, nombre_autorizado, id_autorizado);
            JOptionPane.showMessageDialog(null, "LOS CAMBIOS HAN SIDO GUARDADOS EXITOSAMENTE", "ACTUALIZACION DE DATOS", JOptionPane.PLAIN_MESSAGE);
        } else {
            if (edicion == false) {
                JOptionPane.showMessageDialog(null, "HABILITE EL MODO DE MODIFICAR PARA HACER UNA ACTUALIZACION", "ACTUALIZACION DE DATOS", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "DEBE REALIZAR PRIMERO UNA BUSQUEDA DEL PROVEEDOR", "ACTUALIZACION DE DATOS", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_ActualizarActionPerformed

    private void CancelarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarBTActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelarBTActionPerformed

    private void BuscarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarBTActionPerformed
        Object[] data;
        String codigo;
        boolean encontrado;
        //Busqueda por codigo
        if (modo_busqueda == 0) {
            codigo = Codigotxt.getText();
            if (codigo.equals("")) {
                JOptionPane.showMessageDialog(null, "INGRESE UN CODIGO DE PROVEEDOR", "BUSQUEDA DE PROVEEDOR", JOptionPane.PLAIN_MESSAGE);
            } else {
                encontrado = p.buscarCodigo(codigo);
                if (encontrado == true) {
                    data = p.conseguirDatos(codigo, "", "", 1);
                    //CONSEGUIR REPARTIR EL TEXTO DE LA IDENTIFICACION------------------------------
                    String identificacion = data[1].toString();
                    char tipoidentificacion = identificacion.charAt(0);
                    int TipoID1 = p.indexIdentificacion(tipoidentificacion);
                    IdentificacionCB.setSelectedIndex(TipoID1);
                    Identificaciontxt.setText(identificacion.substring(1, identificacion.length()));
                    //-----------------------------------------------------------------------------
                    RazonSocialtxt.setText(data[2].toString());
                    escribirDatos(data);
                }
            }
            //Busqueda por identificacion
        } else if (modo_busqueda == 1) {
            String identificacion = IdentificacionCB.getSelectedItem().toString();
            identificacion += Identificaciontxt.getText();
            if (identificacion.equals("")) {
                JOptionPane.showMessageDialog(null, "INGRESE UNA IDENTIFICACION DE PROVEEDOR", "BUSQUEDA DE PROVEEDOR", JOptionPane.PLAIN_MESSAGE);
            } else {
                encontrado = p.buscarIdentificacion2(identificacion);
                if (encontrado == true) {
                    data = p.conseguirDatos("", identificacion, "", 2);
                    //COLOCAR EL CODIGO Y LA RAZON SOCIAL
                    Codigotxt.setText(data[0].toString());
                    RazonSocialtxt.setText(data[2].toString());
                    escribirDatos(data);
                }
            }
            //Busqueda por razon_social
        } else if (modo_busqueda == 2) {
            //DEBO COLOCAR EL CODIGO Y LA IDENTIFICACION
            String RS = RazonSocialtxt.getText();
            if (RS.equals("")) {
                JOptionPane.showMessageDialog(null, "INGRESE UNA RAZON SOCIAL DE PROVEEDOR", "BUSQUEDA DE PROVEEDOR", JOptionPane.PLAIN_MESSAGE);
            } else {
                encontrado = p.buscarRazonSocial(RS);
                if (encontrado == true) {
                    data = p.conseguirDatos("", "", RS, 3);
                    //COLOCAR EL CODIGO Y LA IDENTIFICACION
                    Codigotxt.setText(data[0].toString());
                    //CONSEGUIR REPARTIR LA IDENTIFICACION --------------------------------------------
                    String identificacion = data[1].toString();
                    char tipoidentificacion = identificacion.charAt(0);
                    int TipoID1 = p.indexIdentificacion(tipoidentificacion);
                    IdentificacionCB.setSelectedIndex(TipoID1);
                    Identificaciontxt.setText(identificacion.substring(1, identificacion.length()));
                    //----------------------------------------------------------------------------------
                    escribirDatos(data);
                }
            }
        }
        this.ultimo_buscado = Codigotxt.getText();
    }//GEN-LAST:event_BuscarBTActionPerformed

    //FUNCION PARA ESCRIBIR LOS DATOS DEL PROVEEDOR ENCONTRADO DESDE LA DIRECCION
    public void escribirDatos(Object[] data) {
        Direcciontxt.setText(data[3].toString());
        //CONSEGUIR REPARTIR EL TEXTO DEL TELEFONO
        String telefono = data[4].toString();               //EL STRING COMPLETO DE TELEFONO
        String tipoNumero = telefono.substring(0, 4);       //RECIBES EL TIPO NUMERO (0412, etc)
        TlfCB.setSelectedIndex(p.tipoNumeroTlf(tipoNumero));
        Tlftxt.setText(telefono.substring(4, telefono.length()));
        //---------------------------------------------------------------------------
        Mailtxt.setText(data[5].toString());
        NameBnftxt.setText(data[6].toString());
        //CONSEGUIR REPARTIR LA IDENTIFICACION DEL BENEFICIARIO----------------------
        String identificacion2 = data[7].toString();                //LA CEDULA COMPLETA
        char tipoIdentificacion2 = identificacion2.charAt(0);       //EL TIPO DE CEDULA 'V', etc
        int TipoID2 = p.indexIdentificacion(tipoIdentificacion2);     //RECIBIR EL INDEX PARA EL CB SEGUN EL TIPO DE CEDULA
        IDCB.setSelectedIndex(TipoID2);
        IDtxt.setText(identificacion2.substring(1, identificacion2.length())); //LO QUE QUEDA DE CEDULA SIN EL TIPO
        //----------------------------------------------------------------------------
        MailBNFtxt.setText(data[8].toString());
        //IDENTIFICAR EL TIPO DE BANCO
        String banco = data[9].toString();                          //EL STRING COMPLETO DEL BANCO
        BancoCB.setSelectedIndex(p.getindexBanco(banco));
        //----------------------------------------------------------------------------
        NumCuentatxt.setText(data[10].toString());
        //IDENTIFICAR EL TIPO DE CUENTA DE BANCO
        String tipoCuenta = data[11].toString();                    //EL STRING COMPLETO DEL TIPO DE CUENTA BANCARIA
        TCuentaCB.setSelectedIndex(p.indexTipoCuenta(tipoCuenta));
        //IDENTIFICAR EL MODO DE CUENTA-------------------------------------------------
        String modo_cuenta = data[12].toString();                   //EL STRING COMPLETO DEL MOD
        MODCB.setSelectedIndex(p.indexmod_Cuenta(modo_cuenta));
        //IDENTIFICAR EL TIPO DE MONEDA-------------------------------------------------
        String moneda = data[13].toString();                        //EL STRING COMPLETO DE LA MONEDA
        if (moneda.equals("BS")) {
            MonedaCB.setSelectedIndex(0);
        } else if (moneda.equals("$")) {
            MonedaCB.setSelectedIndex(1);
        }
        //-------------------------------------------------------------------------------
        NameAuttxt.setText(data[14].toString());
        IDAuttxt.setText(data[15].toString());
        String actividad = data[16].toString();
        if (actividad.equals("Activo")) {
            ActividadCB.setSelectedIndex(0);
        } else if (actividad.equals("Inactivo")) {
            ActividadCB.setSelectedIndex(1);
        }
    }

    String[] botones_confirmacionEliminar = {"SI, SI DESEO ELIMINAR", "NO, NO DESEO ELIMINAR"};
    String[] botones_confirmacionAccion = {"ACEPTAR", "CANCELAR"};
    private void IdentificaciontxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdentificaciontxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdentificaciontxtActionPerformed

    private void EliminarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarBTActionPerformed
        //1-VERIFICAR QUE NO ESTEN HABILITADOS EL MODO DE MODIFICAR (DE ESTARLO, MANDAR UN MENSAJE DE NEGACION DE ACCION) ADEMAS DE VERIFICAR QUE HAYA UN PROVEEDOR BUSCADO
        //1.2-VERIFICAR QUE EL ESTADO DEL PROVEEDOR DE POR SI ESTE ACTIVO
        //2-PRIMERO DEBE PREGUNTAR SI EN VERDAD DESEA HABILITAR
        //3-SI LA PERSONA ACEPTA SE ELIMINA
        //4-UNA VEZ HECHA LA ELIMINACION, SE LIMPIAN TODOS LOS DATOS Y SE DESHABILITAN LOS CAMPOS
        //5-SE HACE LA PREGUNTA DE QUE SI QUIERE VOLVER A REALIZAR ESTA ACCION
        //6-SI DICE QUE SI, SE CREA UN OBJETO DE TIPOCONSULTA PROVEEDOR
        //7-SE ELIMINA ESTA CLASE

        String estado = ActividadCB.getSelectedItem().toString();
        boolean inhabilitar = false;
        if (estado.equals("Activo")) {
            inhabilitar = true;
        }

        if (edicion == false && !(Codigotxt.getText().equals("")) && !(Identificaciontxt.getText().equals("")) && !(RazonSocialtxt.getText().equals("")) && inhabilitar) {
            //ENTRANDO AQUI, SIGNIFICA QUE: LOS CAMPOS DE CODIGO, IDENTIFICACION Y RAZONSOCIAL ESTAN COMPLETOS
            //COMO AL PRINCIPIO, UNICAMENTE SE VALIDA UNO DE LOS 3 CAMPOS, PUES AUTOMATICAMENTE QUIERE DECIR, QUE YA SE BUSCO UN PROVEEDOR

            //SE PREGUNTA SI SE DESEA ELIMINAR
            int index = JOptionPane.showOptionDialog(null, "¿DESEA INHABILITAR ESTE PROVEEDOR?", "CONFIRMACION DE CAMBIO DE ESTADO", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, botones_confirmacionEliminar, botones_confirmacionEliminar[0]);
            //EL INDEX = 0 REPRESENTA QUE SI DESEA ELIMINAR
            //EL INDEX = 1 REPRESENTA QUE NO DESEA ELIMINAR
            if (index == 0) {
                //DESEA ELIMINAR
                String codigo = Codigotxt.getText();
                if (codigo.equals(this.ultimo_buscado)) {
                    p.deleteProveedor(codigo);
                    JOptionPane.showMessageDialog(null, "SE HA INHABILITADO CON EXITO EL PROVEEDOR", "CONFIRMACION", JOptionPane.PLAIN_MESSAGE);
                    //AHORA SE LIMPIAN TODOS LOS DATOS Y SE DESHABILITAN LOS CAMPOS
                    limpiar();
                    deshabilitarCampos();
                    //SE REALIZA LA PREGUNTA DE QUE SI QUIERE VOLVER A REALIZAR TODA LA ACCION NUEVAMENTE
                    int index2 = JOptionPane.showOptionDialog(null, "¿DESEA VOLVER A INHABILITAR OTRO PROVEEDOR CON OTRO TIPO DE BUSQUEDA?", "CONFIRMACION", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, botones_confirmacionAccion, botones_confirmacionAccion[0]);
                    //EL INDEX2 = 0 REPRESENTA QUE DESEA CAMBIAR DE TIPO DE BUSQUEDA
                    //EL INDEX2 = 1 REPRESENTA QUE NO DESEA CAMBIAR DE TIPO DE BUSQUEDA
                    if (index2 == 0) {
                        //DESEA CAMBIAR DE TIPO DE BUSQUEDA
                        TCP = new TipoConsultaProveedor();
                        TCP.modo = 2;
                        TCP.setVisible(true);
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "NO CAMBIE EL CODIGO DEL PROVEEDOR DESPUES DE LA BUSQUEDA SI DESEA INHABILITAR", "BUSQUEDA DE PROVEEDOR", JOptionPane.PLAIN_MESSAGE);
                }
            }
        } else {
            if (edicion == true) {
                JOptionPane.showMessageDialog(null, "DESHABILITE EL MODO DE MODIFICAR, PARA PROCEDER CON EL CAMBIO DE ESTADO", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else if (edicion == false && (Codigotxt.getText().equals("") || Identificaciontxt.getText().equals("") || RazonSocialtxt.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "USTED NO TIENE UNA BUSQUEDA COMPLETA DE PROVEEDOR PARA INHABILITAR", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "EL PROVEEDOR BUSCADO YA ESTA INHABILITADO", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_EliminarBTActionPerformed

    private void HabilitarCambiosBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HabilitarCambiosBTActionPerformed
        //DEBEMOS HABILITAR O DESHABILITAR LOS CAMPOS
        if (edicion == false) {

            //HABILITAR TODOS LOS CAMPOS
            if (!(Codigotxt.getText().equals("")) && !(Identificaciontxt.getText().equals("")) && !(RazonSocialtxt.getText().equals(""))) {
                //SI LA PERSONA INGRESÓ BUSCANDO POR CODIGO, ES LA MANERA DE VERIFICAR SI YA BUSCÓ
                Codigotxt.setEnabled(false);         //SE DESHABILITA EL CODIGO, PARA QUE SE MANTENGA AHÍ DURANTE LA MODIFICACION, PARA QUE NO HAYA ERRORES
                Identificaciontxt.setEnabled(false); //SE DESHABILITA LA IDENTIFICACION, PARA QUE SE MANTENGA AHÍ DURANTE LA MODIFICACION

                edicion = true;
                //A PARTIR DE AQUÍ SE HABILITAN LOS CAMPOS EMPEZANDO POR LA RAZON SOCIAL
                habilitarCampos();

            } else {
                JOptionPane.showMessageDialog(null, "USTED NO HA REALIZADO UNA BUSQUEDA DE PROVEEDOR", "ERROR", JOptionPane.PLAIN_MESSAGE);
            }
        } else if (edicion == true) {
            edicion = false;
            deshabilitarCampos();
        }
    }//GEN-LAST:event_HabilitarCambiosBTActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if (modo_busqueda == 0) {
            Codigotxt.setEditable(true);
            Codigotxt.setBackground(new Color(0, 0, 0));
            Codigotxt.setForeground(Color.WHITE);
        } else if (modo_busqueda == 1) {
            IdentificacionCB.setEnabled(true);
            Identificaciontxt.setEditable(true);
            Identificaciontxt.setBackground(new Color(0, 0, 0));
            Identificaciontxt.setForeground(Color.WHITE);
        } else if (modo_busqueda == 2) {
            RazonSocialtxt.setEditable(true);
            RazonSocialtxt.setBackground(new Color(0, 0, 0));
            RazonSocialtxt.setForeground(Color.WHITE);
        }
    }//GEN-LAST:event_formWindowOpened

    private void MODCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MODCBActionPerformed
        if (MODCB.getSelectedItem().toString().equals("Cuenta Autorizada")) {
            NameAuttxt.setEditable(true);
            IDAuttxt.setEditable(true);
        } else if (MODCB.getSelectedItem().toString().equals("Cuenta Nueva") || MODCB.getSelectedItem().toString().equals("Cuenta Propia")) {
            NameAuttxt.setEditable(false);
            IDAuttxt.setEditable(false);
        }
    }//GEN-LAST:event_MODCBActionPerformed

    String[] botones_confirmacionHabilitar = {"SI, SI DESEO HABILITAR", "NO, NO DESEO HABILITAR"};
    String[] botones_confirmacionHabilitarAccion = {"ACEPTAR", "CANCELAR"};

    //BOTON PARA HABILITAR EL ESTADO DEL PROVEEDOR
    private void HabilitarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HabilitarBTActionPerformed
        String estado = ActividadCB.getSelectedItem().toString();
        boolean habilitar = false;
        if (estado.equals("Inactivo")) {
            habilitar = true;
        }

        if (habilitar && edicion == false && !(Codigotxt.getText().equals("")) && !(Identificaciontxt.getText().equals("")) && !(RazonSocialtxt.getText().equals(""))) {
            //ENTRANDO AQUI, SIGNIFICA QUE: LOS CAMPOS DE CODIGO, IDENTIFICACION Y RAZONSOCIAL ESTAN COMPLETOS
            //COMO AL PRINCIPIO, UNICAMENTE SE VALIDA UNO DE LOS 3 CAMPOS, PUES AUTOMATICAMENTE QUIERE DECIR, QUE YA SE BUSCO UN PROVEEDOR

            //SE PREGUNTA SI SE DESEA HABILITAR EL PROVEEDOR
            int index = JOptionPane.showOptionDialog(null, "¿DESEA HABILITAR ESTE PROVEEDOR?", "CONFIRMACION DE CAMBIO DE ESTADO", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, botones_confirmacionHabilitar, botones_confirmacionHabilitar[0]);
            //EL INDEX = 0 REPRESENTA QUE SI DESEA HABILITAR
            //EL INDEX = 1 REPRESENTA QUE NO DESEA HABILITAR
            if (index == 0) {
                //DESEA HABILITAR
                String codigo = Codigotxt.getText();
                if (codigo.equals(this.ultimo_buscado)) {
                    p.habilitarProveedor(codigo);
                    JOptionPane.showMessageDialog(null, "SE HA HABILITADO CON EXITO EL PROVEEDOR", "CONFIRMACION", JOptionPane.PLAIN_MESSAGE);
                    //AHORA SE LIMPIAN TODOS LOS DATOS Y SE DESHABILITAN LOS CAMPOS
                    limpiar();
                    deshabilitarCampos();
                    //SE REALIZA LA PREGUNTA DE QUE SI QUIERE VOLVER A REALIZAR TODA LA ACCION NUEVAMENTE
                    int index2 = JOptionPane.showOptionDialog(null, "¿DESEA VOLVER A HABILITAR OTRO PROVEEDOR CON OTRO TIPO DE BUSQUEDA?", "CONFIRMACION", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, botones_confirmacionAccion, botones_confirmacionAccion[0]);
                    //EL INDEX2 = 0 REPRESENTA QUE DESEA CAMBIAR DE TIPO DE BUSQUEDA
                    //EL INDEX2 = 1 REPRESENTA QUE NO DESEA CAMBIAR DE TIPO DE BUSQUEDA
                    if (index2 == 0) {
                        //DESEA CAMBIAR DE TIPO DE BUSQUEDA
                        TCP = new TipoConsultaProveedor();
                        TCP.modo = 2;
                        TCP.setVisible(true);
                        this.dispose();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "NO CAMBIE EL CODIGO DEL PROVEEDOR DESPUES DE LA BUSQUEDA SI DESEA HABILITAR", "BUSQUEDA DE PROVEEDOR", JOptionPane.PLAIN_MESSAGE);
                }
            }
        } else {
            if (edicion == true) {
                JOptionPane.showMessageDialog(null, "DESHABILITE EL MODO DE MODIFICAR, PARA PROCEDER CON EL CAMBIO DE ESTADO", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else if (edicion == false && (Codigotxt.getText().equals("") || Identificaciontxt.getText().equals("") || RazonSocialtxt.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "USTED NO TIENE UNA BUSQUEDA COMPLETA DE PROVEEDOR PARA INHABILITAR", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "EL PROVEEDOR BUSCADO YA ESTA HABILITADO", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_HabilitarBTActionPerformed

    public void habilitarCampos() {
        RazonSocialtxt.setEditable(true);
        Direcciontxt.setEditable(true);
        TlfCB.setEnabled(true);
        Tlftxt.setEditable(true);
        Mailtxt.setEditable(true);
        NameBnftxt.setEditable(true);
        IDCB.setEnabled(true);
        IDtxt.setEditable(true);
        MailBNFtxt.setEditable(true);
        BancoCB.setEnabled(true);
        NumCuentatxt.setEditable(true);
        TCuentaCB.setEnabled(true);
        MODCB.setEnabled(true);
        MonedaCB.setEnabled(true);
    }

    public void deshabilitarCampos() {
        RazonSocialtxt.setEditable(false);
        Direcciontxt.setEditable(false);
        TlfCB.setEnabled(false);
        Tlftxt.setEditable(false);
        Mailtxt.setEditable(false);
        NameBnftxt.setEditable(false);
        IDCB.setEnabled(false);
        IDtxt.setEditable(false);
        MailBNFtxt.setEditable(false);
        BancoCB.setEnabled(false);
        NumCuentatxt.setEditable(false);
        TCuentaCB.setEnabled(false);
        MODCB.setEnabled(false);
        MonedaCB.setEnabled(false);
        NameAuttxt.setEditable(false);
        IDAuttxt.setEditable(false);

        if (modo_busqueda == 0) {
            //Habilitar nuevamente el campo de codigo
            Codigotxt.setEnabled(true);
        } else if (modo_busqueda == 1) {
            //Habilitar nuevamente el campo de Identificacion
            IdentificacionCB.setEnabled(true);
            Identificaciontxt.setEditable(true);
        } else if (modo_busqueda == 2) {
            //Habilitar nuevamente el campo de RazonSocial
            RazonSocialtxt.setEditable(true);
        }
    }

    public void limpiar() {
        Codigotxt.setText("");
        IdentificacionCB.setSelectedIndex(0);
        Identificaciontxt.setText("");
        RazonSocialtxt.setText("");
        Direcciontxt.setText("");
        Tlftxt.setText("");
        TlfCB.setSelectedIndex(0);
        Mailtxt.setText("");
        NameBnftxt.setText("");
        IDCB.setSelectedIndex(0);
        IDtxt.setText("");
        MailBNFtxt.setText("");
        BancoCB.setSelectedIndex(0);
        NumCuentatxt.setText("");
        TCuentaCB.setSelectedIndex(0);
        MODCB.setSelectedIndex(0);
        MonedaCB.setSelectedIndex(0);
        NameAuttxt.setText("");
        IDAuttxt.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarEliminarProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarEliminarProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarEliminarProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarEliminarProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarEliminarProveedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ActividadCB;
    private javax.swing.JLabel ActividadL;
    private javax.swing.JButton Actualizar;
    private javax.swing.JComboBox<String> BancoCB;
    private javax.swing.JLabel BancoL;
    private javax.swing.JButton BuscarBT;
    private javax.swing.JButton CancelarBT;
    private javax.swing.JLabel CodigoL;
    private javax.swing.JTextField Codigotxt;
    private javax.swing.JLabel DireccionL;
    private javax.swing.JTextField Direcciontxt;
    private javax.swing.JButton EliminarBT;
    private javax.swing.JLabel FotoIdentificacion;
    private javax.swing.JButton HabilitarBT;
    private javax.swing.JButton HabilitarCambiosBT;
    private javax.swing.JLabel IDAutL;
    private javax.swing.JTextField IDAuttxt;
    private javax.swing.JComboBox<String> IDCB;
    private javax.swing.JLabel IDL;
    private javax.swing.JTextField IDtxt;
    private javax.swing.JComboBox<String> IdentificacionCB;
    private javax.swing.JLabel IdentificacionL;
    private javax.swing.JLabel IdentificacionProveedor;
    private javax.swing.JTextField Identificaciontxt;
    private javax.swing.JLabel InformacionBancariaL;
    private javax.swing.JLabel LogoInformacionBancaria;
    private javax.swing.JComboBox<String> MODCB;
    private javax.swing.JLabel MODL;
    private javax.swing.JTextField MailBNFtxt;
    private javax.swing.JLabel MailBnfL;
    private javax.swing.JLabel MailL;
    private javax.swing.JTextField Mailtxt;
    private javax.swing.JComboBox<String> MonedaCB;
    private javax.swing.JLabel MonedaL;
    private javax.swing.JLabel NameAutL;
    private javax.swing.JTextField NameAuttxt;
    private javax.swing.JLabel NameBnfL;
    private javax.swing.JTextField NameBnftxt;
    private javax.swing.JLabel NumCuentaL;
    private javax.swing.JTextField NumCuentatxt;
    private javax.swing.JPanel PanelBancario;
    private javax.swing.JPanel PanelDeIdentificacion;
    private javax.swing.JPanel PanelObservaciones;
    private javax.swing.JLabel RazonSocialL;
    private javax.swing.JTextField RazonSocialtxt;
    private javax.swing.JComboBox<String> TCuentaCB;
    private javax.swing.JLabel TCuentaL;
    private javax.swing.JComboBox<String> TlfCB;
    private javax.swing.JLabel TlfL;
    private javax.swing.JTextField Tlftxt;
    // End of variables declaration//GEN-END:variables
}
