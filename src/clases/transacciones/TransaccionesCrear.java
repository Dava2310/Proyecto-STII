/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clases.transacciones;

import clases.transacciones.IdentificacionProveedorTransacciones;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logica.boleto;
import logica.transacciones;

public class TransaccionesCrear extends javax.swing.JFrame {

    /*
        VARIABLES INICIALES PARA EL PROVEEDOR QUE SE INGRESA A TRAVES DE LA
        PANTALLA ANTERIOR
     */
    public int indexComboProveedor = 0;
    public String identificacionTXT;
    public String codigoTXT;
    public String razonSocialTXT;
    public String numeroBoleto;
    public String fecha;
    public String semana;
    public float Kg_Brutos;
    public float Kg_Netos;
    public int MS;
    public int Impurezas;
    public boolean boletoCreado = false;
    public boolean Materia_Prima = false;
    public boolean Cuadrilla = false;
    public boolean Flete = false;
    public boolean Peaje = false;
    transacciones t = new transacciones();
    boleto b = new boleto();
    IdentificacionProveedorTransacciones IPT = new IdentificacionProveedorTransacciones();

    public TransaccionesCrear() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CodL = new javax.swing.JLabel();
        CODtxt = new javax.swing.JTextField();
        IDL = new javax.swing.JLabel();
        tipoIDProveedorCB = new javax.swing.JComboBox<>();
        IDtxt = new javax.swing.JTextField();
        RazonSocialL = new javax.swing.JLabel();
        RazonSocialtxt = new javax.swing.JTextField();
        InfoBoletoL = new javax.swing.JLabel();
        NroBoletoL = new javax.swing.JLabel();
        NroBoletotxt = new javax.swing.JTextField();
        SemanaL = new javax.swing.JLabel();
        FechaL1 = new javax.swing.JLabel();
        Semanatxt = new javax.swing.JTextField();
        KGBrutosL = new javax.swing.JLabel();
        KGbrutostxt = new javax.swing.JTextField();
        KGNetosL = new javax.swing.JLabel();
        MSL = new javax.swing.JLabel();
        ImpurezasL = new javax.swing.JLabel();
        KGNetostxt = new javax.swing.JTextField();
        MStxt = new javax.swing.JTextField();
        Impurezastxt = new javax.swing.JTextField();
        TipoTransaccion = new javax.swing.JLabel();
        MPCB = new javax.swing.JCheckBox();
        CuadrillaCB = new javax.swing.JCheckBox();
        FleteCB = new javax.swing.JCheckBox();
        PeajeCB = new javax.swing.JCheckBox();
        USDdiaL1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ObservacionesTXT = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CrearBT = new javax.swing.JButton();
        CancelarBT = new javax.swing.JButton();
        Fechatxt = new javax.swing.JFormattedTextField();
        EstadoLB = new javax.swing.JLabel();
        EstadoCB = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Informacion del Proveedor");

        CodL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CodL.setText("Codigo(*)");

        CODtxt.setEditable(false);
        CODtxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        IDL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        IDL.setText("Identificacion(*)");

        tipoIDProveedorCB.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        tipoIDProveedorCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "V", "E", "J", "P", "G" }));
        tipoIDProveedorCB.setEnabled(false);
        tipoIDProveedorCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoIDProveedorCBActionPerformed(evt);
            }
        });

        IDtxt.setEditable(false);
        IDtxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        RazonSocialL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        RazonSocialL.setText("Razón Social (*)");

        RazonSocialtxt.setEditable(false);
        RazonSocialtxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        InfoBoletoL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        InfoBoletoL.setText("Informacion Boleto");

        NroBoletoL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        NroBoletoL.setText("Boleto Nº");

        NroBoletotxt.setEditable(false);
        NroBoletotxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        SemanaL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SemanaL.setText("Semana");

        FechaL1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        FechaL1.setText("Fecha");

        Semanatxt.setEditable(false);
        Semanatxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        KGBrutosL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        KGBrutosL.setText("Kg.Brutos");

        KGbrutostxt.setEditable(false);
        KGbrutostxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        KGNetosL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        KGNetosL.setText("Kg.Netos");

        MSL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MSL.setText("%MS");

        ImpurezasL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ImpurezasL.setText("Impurezas");

        KGNetostxt.setEditable(false);
        KGNetostxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        MStxt.setEditable(false);
        MStxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        Impurezastxt.setEditable(false);
        Impurezastxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        TipoTransaccion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TipoTransaccion.setText("TipoTransaccion");

        MPCB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MPCB.setText("MP");

        CuadrillaCB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CuadrillaCB.setText("Cuadrilla");

        FleteCB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        FleteCB.setText("Flete");

        PeajeCB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        PeajeCB.setText("Peaje");
        PeajeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeajeCBActionPerformed(evt);
            }
        });

        USDdiaL1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        USDdiaL1.setText("Observaciones");

        ObservacionesTXT.setColumns(20);
        ObservacionesTXT.setRows(5);
        jScrollPane1.setViewportView(ObservacionesTXT);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Imagen1.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boleto.png"))); // NOI18N

        CrearBT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CrearBT.setText("CREAR");
        CrearBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearBTActionPerformed(evt);
            }
        });

        CancelarBT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CancelarBT.setText("CANCELAR");
        CancelarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarBTActionPerformed(evt);
            }
        });

        Fechatxt.setEditable(false);
        Fechatxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FechatxtFocusLost(evt);
            }
        });
        Fechatxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FechatxtActionPerformed(evt);
            }
        });
        Fechatxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FechatxtKeyTyped(evt);
            }
        });

        EstadoLB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        EstadoLB.setText("Estado de la Transaccion");

        EstadoCB.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        EstadoCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Procesada", "Procesada" }));
        EstadoCB.setEnabled(false);
        EstadoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstadoCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(InfoBoletoL))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(CodL)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(CODtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(IDL)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tipoIDProveedorCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(IDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(RazonSocialL)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(RazonSocialtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(USDdiaL1)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(NroBoletoL)
                                            .addComponent(FechaL1)
                                            .addComponent(KGBrutosL))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(KGbrutostxt, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(KGNetosL)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(KGNetostxt, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(MSL)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(MStxt, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(ImpurezasL)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(Impurezastxt, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(50, 50, 50)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(NroBoletotxt, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                                    .addComponent(Fechatxt))
                                                .addGap(18, 18, 18)
                                                .addComponent(SemanaL)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(Semanatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(TipoTransaccion)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(MPCB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CuadrillaCB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(PeajeCB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FleteCB))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(EstadoLB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EstadoCB, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(CrearBT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelarBT)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CodL)
                            .addComponent(CODtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IDL)
                            .addComponent(tipoIDProveedorCB)
                            .addComponent(IDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RazonSocialL)
                            .addComponent(RazonSocialtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addComponent(InfoBoletoL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(USDdiaL1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(NroBoletoL))
                            .addComponent(NroBoletotxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FechaL1)
                            .addComponent(SemanaL)
                            .addComponent(Semanatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Fechatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(KGBrutosL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(KGbrutostxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(KGNetosL)
                            .addComponent(KGNetostxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MSL)
                            .addComponent(MStxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ImpurezasL)
                            .addComponent(Impurezastxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TipoTransaccion)
                            .addComponent(MPCB)
                            .addComponent(CuadrillaCB)
                            .addComponent(PeajeCB)
                            .addComponent(FleteCB))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EstadoLB)
                            .addComponent(EstadoCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CrearBT)
                    .addComponent(CancelarBT))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tipoIDProveedorCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoIDProveedorCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoIDProveedorCBActionPerformed

    private void PeajeCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeajeCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PeajeCBActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // LA FASE NORMAL DE CREACION DE TRANSACCION    
        if(boletoCreado) {
            /*
                EN ESTE APARTADO, NOS TENEMOS QUE ENCARGAR DE COLOCAR POR PANTALLA
                LOS DATOS DEL PROVEEDOR QUE FUERON PUESTOS EN LA PRIMERA PANTALLA
                QUE DA PASO ANTES DE CREAR UNA TRANSACCION
             */

            CODtxt.setText(codigoTXT);
            RazonSocialtxt.setText(razonSocialTXT);
            tipoIDProveedorCB.setSelectedIndex(indexComboProveedor);
            IDtxt.setText(identificacionTXT);
           
            /*
                BLOQUEAR LOS TIPOS DE TRANSACCIONES YA ESCOJIDOS
            */
            if(Cuadrilla){
                CuadrillaCB.setSelected(true);
                CuadrillaCB.setEnabled(false);
            }
            
            if(Materia_Prima){
                MPCB.setSelected(true);
                MPCB.setEnabled(false);
            }
            
            if(Flete){
                FleteCB.setSelected(true);
                FleteCB.setEnabled(false);
            }    
            
            if(Peaje){
               PeajeCB.setSelected(true);
               PeajeCB.setEnabled(false);
            }
            
            /*
                YA TENEMOS PUESTOS LOS DATOS DEL NUEVO PROVEEDOR
                SABEMOS QUE ESTE ES UN BOLETO YA CREADO
                Y CUALES SON LAS TRANSACCIONES QUE FALTAN
                
                NOS FALTA BUSCAR COLOCAR POR PANTALLA LOS VALORES DE:
                - Fecha
                - Semana
                - KgBrutos
                - KgNetos
                - Materia Seca
                - Impurezas
            */
            
            NroBoletotxt.setText(numeroBoleto);
            
            //LLAMAMOS A LA FUNCION QUE NOS RECOJE LOS DATOS DEL BOLETO
            Fechatxt.setText(this.fecha);
            Semanatxt.setText(this.semana);
            KGbrutostxt.setText(String.valueOf(this.Kg_Brutos));
            KGNetostxt.setText(String.valueOf(this.Kg_Netos));
            MStxt.setText(String.valueOf(this.MS));
            Impurezastxt.setText(String.valueOf(this.Impurezas)); 
        }
    }//GEN-LAST:event_formWindowOpened

    private void CancelarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarBTActionPerformed
        String[] botones_confirmacionCancelar = {"NO, NO DESEO CANCELAR", "SI, SI DESEO CANCELAR"};
        int index = JOptionPane.showOptionDialog(null, "DESEA CANCELAR LA CREACION DE TRANSACCION?", "CONFIRMACION DE CANCELACION", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, botones_confirmacionCancelar, botones_confirmacionCancelar[0]);
        /*
            ESTE AVISO ARROJA DOS VALORES ENTEROS
            0- NO DESEA CANCELAR
            1- SI DESEA CANCELAR
         */
        if (index == 1) {
            this.dispose();
        }
    }//GEN-LAST:event_CancelarBTActionPerformed

    private void CrearBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearBTActionPerformed
        if(boletoCreado) {
            if (MPCB.isSelected() || CuadrillaCB.isSelected() || PeajeCB.isSelected() || FleteCB.isSelected()) {
                /*
                    A PARTIR DE AQUI, YA TENEMOS TODO LO SUFICIENTE COMO PARAR CREAR UNA TRANSACCION
                */

                /*=================================================================================================\\
                ||==================================CREACION DE LA TRANSACCION=====================================||
                //=================================================================================================*/
                //EMPEZAMOS POR RECOGER TODOS LOS DATOS DE LA PANTALLA
                String num_transaccion = NroBoletotxt.getText();
                /*
                    AQUI REVISAMOS CUALES SON LOS TIPOS DE TRANSACCIONES DE ESTA TRANSACCION
                    POR CADA UNO DE ELLOS, SE HACE UN CONDICIONAL, SI ESTAN SELECTED, AL CAMPO SE LE COLOCA SI, 
                    O NO SI NO ESTA SELECCIONADO
                */
                //PRIMERO CREAMOS VARIABLES STRING EN BLANCO, PORQUE IGUAL HAY QUE METER LAS VARIABLES DENTRO DE LAS FUNCIONES.
                String materiaPrima2 = "";
                String Cuadrilla2 = "";
                String Flete2 = "";
                String peaje2 = "";
                int cantidad_transacciones;
                try {
                    cantidad_transacciones = b.cantidadTransacciones_Boleto(num_transaccion);
                    System.out.println(cantidad_transacciones + " antes");
                    boolean Materia_Prima = this.Materia_Prima;
                    if (Materia_Prima) {          //CONDICIONAL DE LA MATERIA PRIMA
                        materiaPrima2 = "NO";
                    }

                    boolean Cuadrilla = this.Cuadrilla;
                    if (Cuadrilla) {   //CONDICIONAL DE LA CUADRILLA
                        Cuadrilla2 = "NO";
                    }

                    boolean Peaje = this.Peaje;
                    if (Peaje) {       //CONDICIONAL DE PEAJE
                        peaje2 = "NO";
                    }

                    boolean Flete = this.Flete;
                    if (Flete) {       //CONDICIONAL DE FLETE
                        Flete2 = "NO";
                    }


                    if(!Materia_Prima && MPCB.isSelected()){
                        materiaPrima2 = "SI";
                        cantidad_transacciones++;
                    } else if(!Materia_Prima && !MPCB.isSelected()){
                        materiaPrima2 = "NO";
                    }
                    if(!Cuadrilla && CuadrillaCB.isSelected()){
                        Cuadrilla2 = "SI";
                        cantidad_transacciones++;
                    } else if(!Cuadrilla && !CuadrillaCB.isSelected()) {
                        Cuadrilla2 = "NO";
                    }
                    if(!Flete && FleteCB.isSelected()){
                        Flete2 = "SI";
                        cantidad_transacciones++;
                    }else if(!Flete && !FleteCB.isSelected()){
                        Flete2 = "NO";
                    }                     
                    if(!Peaje && PeajeCB.isSelected()){
                        peaje2 = "SI";
                        cantidad_transacciones++;
                    } else if(!Peaje && !PeajeCB.isSelected()){
                        peaje2 = "NO";
                    }

                    String observaciones = "";
                    observaciones = ObservacionesTXT.getText();
                    
                    /*
                        AQUI SIEMPRE DIREMOS QUE LA TRANSACCION COMO SE ESTA CREANDO NO HA SIDO PAGADA
                        POR CONVENIENCIA ESTETICA, SE MUESTRA IGUAL UN COMBO BOX QUE MUESTRA EL TIPO DE LA TRANSACCION
                    */
                    
                    String estado = EstadoCB.getSelectedItem().toString();
                    //SOLO DE AQUI VERIFICAMOS POR SI ACASO, QUE SEA NO PROCESADA
                    if(estado.equals("No Procesada")){
                        estado = "NO"; // HACEMOS ESTO PORQUE EN LA TABLA SQL, ESE DATO ES SI/NO
                    }
                    //DE AQUI NOS QUEDARIA GUARDAR EN UNA VARIABLE TAMBIEN EL CODIGO DE PROVEEDOR
                    String codigoProveedor = CODtxt.getText();
                    
                    /*===============================================================================================================================\\
                    ||==================================LLAMADA DE LA FUNCION UPDATE CANTIDAD_TRANSACCIONES==========================================||
                    //===============================================================================================================================*/
                    b.updateCantidad_Transacciones(num_transaccion, cantidad_transacciones);
                    /*===================================================================================================================\\
                    ||==================================LLAMADA DE LA FUNCION CREAR TRANSACCION==========================================||
                    //===================================================================================================================*/
                    t.NuevaTransaccion(num_transaccion, materiaPrima2, Cuadrilla2, Flete2, peaje2, estado, observaciones, codigoProveedor);
                    
                        /*
                        A PARTIR DE AQUI PUEDEN PASAR DOS ESCENARIOS:
                        1- SE RELLENARON TODOS LOS TIPOS DE TRANSACCION
                        2- NO SE LLENARON TODOS LOS TIPOS DE TRANSACCION

                        PARA EL PRIMER ESCENARIO, DIREMOS QUE LA CREACION SE COMPLETO, Y QUE SI DESEA CREAR UNA NUEVA
                        LO COMPROBAREMOS CON LA CONDICION LOGICA AND

                        SI ESTE PRIMERO NO SE DA, COMO DE POR SI SE NECESITABA UNO SELECCIONADO PARA ENTRAR
                        NOS BASTA CON UN ELSE SIN CONDICION LOGICA
                        */

                        //PRIMER ESCENARIO
                        if (cantidad_transacciones == 4) {
                            String[] botones_confirmacionCrear = {"SI", "NO"};
                            int index = JOptionPane.showOptionDialog(null, "CREACION EXITOSA \n \n ¿DESEA INGRESAR UN NUEVO BOLETON?", "CONFIRMACION DE CREAR", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, botones_confirmacionCrear, botones_confirmacionCrear[0]);
                            /*
                                EN ESTE MOMENTO, ESTAMOS ENVIANDO UNA ALERTA A VER SI DESEA CREAR UNA NUEVA TRANSACCION
                                SI DICE QUE SI, PRIMERO MOSTRAMOS POR PANTALLA LA VENTANA QUE NOS PERMITE PRIMERO PONER LOS DATOS INICIALES
                                PARA DESPUES DESACTIVAR ESTA

                                EN EL CASO CONTRARIO QUE DIGA QUE NO, SOLAMENTE DESACTIVAMOS ESTA
                            */

                            if (index == 0) {
                                IPT.setVisible(true);
                                this.dispose();
                            } else {
                                this.dispose();
                            }
                        } else if(cantidad_transacciones < 4) { //SEGUNDO ESCENARIO
                            /*
                                AQUI DEBERIA LLAMAR A UNA SIGUIENTE PANTALLA PRACTICAMENTE DE ESTE MISMO ESTILO
                                CREARIA UN NUEVO OBJETO TRANSACCIONES CREAR
                                DONDE SEPA QUE ESTOY HACIENDO UNA NUEVA TRANSACCION DE UN MISMO BOLETO
                                IMPRIMIR LOS DATOS YA FIJOS DEL BOLETO
                                DESHABILITANDO LOS TIPOS DE TRANSACCIONES QUE YA SE ASIGNARON
                                Y SOLO DEJANDO QUE CAMBIE EL TIPO DE TRANSACCION MAS EL OTRO PROVEEDOR

                                ENTONCES LO QUE DEBO HACER ES PRIMERO LLAMAR A LA VENTANA ANTERIOR DE IDENTIFICACIONPROVEEDOR TRANSACCIONES
                                DONDE DEJE METER EL NUEVO PROVEEDOR, YA QUE AHI SE ENCUENTRAN TODAS LAS VERIFICACIONES
                                PERO QUE EL NUM BOLETO SEA EL MISMO
                                SE IRA PASANDO UNA CONDICION BOOLEANA ENTRE AMBAS INTERFACES
                                PARA QUE AL MOMENTO DE LLEGAR ESTA VENTANA NUEVAMENTE, SE SEPA QUE ESTAMOS TRABAJANDO CON EL MISMO BOLETO ANTERIOR
                            */

                            //CABE DESTACAR QUE TODO ESTE PROCEDIMIENTO SERA SI LA PERSONA SI DESEA HACER UNA NUEVA TRANSACCION
                            String[] botones_confirmacionCrear = {"SI", "NO"};
                            int index = JOptionPane.showOptionDialog(null, "SE HA DETECTADO QUE ESTE BOLETO AUN TIENE TRANSACCCIONES DISPONIBLES, ¿DESEA REALIZAR UNA NUEVA CON EL MISMO BOLETO?", "CONFIRMACION DE CREAR", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, botones_confirmacionCrear, botones_confirmacionCrear[0]);
                            if(index == 0){
                                IPT = new IdentificacionProveedorTransacciones();
                                IPT.modo = 1;
                                IPT.num_Boleto = num_transaccion;
                                IPT.setVisible(true);
                                this.dispose();
                            } else {
                                this.dispose();
                            }
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(TransaccionesCrear.class.getName()).log(Level.SEVERE, null, ex);                  
                    }
                    
                //====================================FINAL DE CREACION DE TRANSACCION==============================\\
            }//CIERRE DE CONDICIONAL DE LOS TIPOS DE TRANSACCION
        }
    }//GEN-LAST:event_CrearBTActionPerformed

    private void FechatxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FechatxtKeyTyped
        
    }//GEN-LAST:event_FechatxtKeyTyped

    private void FechatxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FechatxtFocusLost
    
    }//GEN-LAST:event_FechatxtFocusLost

    private void FechatxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FechatxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FechatxtActionPerformed

    private void EstadoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstadoCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EstadoCBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransaccionesCrear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransaccionesCrear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransaccionesCrear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransaccionesCrear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransaccionesCrear().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CODtxt;
    private javax.swing.JButton CancelarBT;
    private javax.swing.JLabel CodL;
    private javax.swing.JButton CrearBT;
    private javax.swing.JCheckBox CuadrillaCB;
    private javax.swing.JComboBox<String> EstadoCB;
    private javax.swing.JLabel EstadoLB;
    private javax.swing.JLabel FechaL1;
    private javax.swing.JFormattedTextField Fechatxt;
    private javax.swing.JCheckBox FleteCB;
    private javax.swing.JLabel IDL;
    private javax.swing.JTextField IDtxt;
    private javax.swing.JLabel ImpurezasL;
    private javax.swing.JTextField Impurezastxt;
    private javax.swing.JLabel InfoBoletoL;
    private javax.swing.JLabel KGBrutosL;
    private javax.swing.JLabel KGNetosL;
    private javax.swing.JTextField KGNetostxt;
    private javax.swing.JTextField KGbrutostxt;
    private javax.swing.JCheckBox MPCB;
    private javax.swing.JLabel MSL;
    private javax.swing.JTextField MStxt;
    private javax.swing.JLabel NroBoletoL;
    private javax.swing.JTextField NroBoletotxt;
    private javax.swing.JTextArea ObservacionesTXT;
    private javax.swing.JCheckBox PeajeCB;
    private javax.swing.JLabel RazonSocialL;
    private javax.swing.JTextField RazonSocialtxt;
    private javax.swing.JLabel SemanaL;
    private javax.swing.JTextField Semanatxt;
    private javax.swing.JLabel TipoTransaccion;
    private javax.swing.JLabel USDdiaL1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> tipoIDProveedorCB;
    // End of variables declaration//GEN-END:variables
}
