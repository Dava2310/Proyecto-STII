/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clases.transacciones;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.boleto;
import logica.proveedor;
import logica.transacciones;

/**
 *
 * @author usuario
 */
public class TransaccionesConsultarModificar1 extends javax.swing.JFrame {

    private int fila = -1;
    private int COD_Transaccion = 0;
    private Object[][] DataTransacciones;
    private Object[][] DataProveedores;
    private transacciones TransaccionesObject = new transacciones();
    private proveedor Proveedor = new proveedor();
    private boleto B = new boleto();
    private int registros = 0;
    public TransaccionesConsultarModificar1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        PaneldeInfo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CodL = new javax.swing.JLabel();
        CODtxt = new javax.swing.JTextField();
        IDL = new javax.swing.JLabel();
        tipoIDProveedorCB = new javax.swing.JComboBox<>();
        IDtxt = new javax.swing.JTextField();
        RazonSocialL = new javax.swing.JLabel();
        RazonSocialtxt = new javax.swing.JTextField();
        InfoBoletoL = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        NroBoletoL = new javax.swing.JLabel();
        NroBoletotxt = new javax.swing.JTextField();
        Fechatxt = new javax.swing.JTextField();
        FechaL1 = new javax.swing.JLabel();
        SemanaL = new javax.swing.JLabel();
        Semanatxt = new javax.swing.JTextField();
        KGBrutosL = new javax.swing.JLabel();
        KGbrutostxt = new javax.swing.JTextField();
        KGNetosL = new javax.swing.JLabel();
        KGNetostxt = new javax.swing.JTextField();
        MStxt = new javax.swing.JTextField();
        MSL = new javax.swing.JLabel();
        ImpurezasL = new javax.swing.JLabel();
        Impurezastxt = new javax.swing.JTextField();
        FleteCB = new javax.swing.JCheckBox();
        PeajeCB = new javax.swing.JCheckBox();
        CuadrillaCB = new javax.swing.JCheckBox();
        MPCB = new javax.swing.JCheckBox();
        TipoTransaccion = new javax.swing.JLabel();
        USDdiaL1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Observacionestxt = new javax.swing.JTextArea();
        GuardarBT = new javax.swing.JButton();
        CancelarBT = new javax.swing.JButton();
        SeleccionarBT = new javax.swing.JToggleButton();
        HabilitarcambiosBT = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        EstadoCB = new javax.swing.JComboBox<>();
        ProveedoresCB = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Informacion del Proveedor");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Imagen1.png"))); // NOI18N

        CodL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CodL.setText("Codigo(*)");

        CODtxt.setEditable(false);
        CODtxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        IDL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        IDL.setText("Identificacion(*)");

        tipoIDProveedorCB.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        tipoIDProveedorCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "V", "E", "J", "P", "G" }));
        tipoIDProveedorCB.setEnabled(false);

        IDtxt.setEditable(false);
        IDtxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        RazonSocialL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        RazonSocialL.setText("Razón Social (*)");

        RazonSocialtxt.setEditable(false);
        RazonSocialtxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        InfoBoletoL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        InfoBoletoL.setText("Informacion Boleto");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boleto.png"))); // NOI18N

        NroBoletoL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        NroBoletoL.setText("Boleto Nº");

        NroBoletotxt.setEditable(false);
        NroBoletotxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        Fechatxt.setEditable(false);
        Fechatxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        FechaL1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        FechaL1.setText("Fecha");

        SemanaL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SemanaL.setText("Semana");

        Semanatxt.setEditable(false);
        Semanatxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        KGBrutosL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        KGBrutosL.setText("Kg.Brutos");

        KGbrutostxt.setEditable(false);
        KGbrutostxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        KGNetosL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        KGNetosL.setText("Kg.Netos");

        KGNetostxt.setEditable(false);
        KGNetostxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        MStxt.setEditable(false);
        MStxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        MSL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MSL.setText("%MS");

        ImpurezasL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ImpurezasL.setText("Impurezas");

        Impurezastxt.setEditable(false);
        Impurezastxt.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        FleteCB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        FleteCB.setText("Flete");
        FleteCB.setEnabled(false);

        PeajeCB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        PeajeCB.setText("Peaje");
        PeajeCB.setEnabled(false);

        CuadrillaCB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CuadrillaCB.setText("Cuadrilla");
        CuadrillaCB.setEnabled(false);

        MPCB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MPCB.setText("MP");
        MPCB.setEnabled(false);

        TipoTransaccion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TipoTransaccion.setText("TipoTransaccion");

        USDdiaL1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        USDdiaL1.setText("Observaciones");

        Observacionestxt.setEditable(false);
        Observacionestxt.setColumns(20);
        Observacionestxt.setRows(5);
        jScrollPane1.setViewportView(Observacionestxt);

        GuardarBT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        GuardarBT.setText("GUARDAR");
        GuardarBT.setEnabled(false);
        GuardarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarBTActionPerformed(evt);
            }
        });

        CancelarBT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CancelarBT.setText("CANCELAR");
        CancelarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarBTActionPerformed(evt);
            }
        });

        SeleccionarBT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SeleccionarBT.setText("SELECCIONAR");
        SeleccionarBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionarBTActionPerformed(evt);
            }
        });

        HabilitarcambiosBT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        HabilitarcambiosBT.setText("HABILITAR CAMBIOS");
        HabilitarcambiosBT.setEnabled(false);
        HabilitarcambiosBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HabilitarcambiosBTActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Estado de la Transaccion");

        EstadoCB.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        EstadoCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Procesadas", "Procesadas" }));
        EstadoCB.setEnabled(false);

        ProveedoresCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        ProveedoresCB.setEnabled(false);
        ProveedoresCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProveedoresCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PaneldeInfoLayout = new javax.swing.GroupLayout(PaneldeInfo);
        PaneldeInfo.setLayout(PaneldeInfoLayout);
        PaneldeInfoLayout.setHorizontalGroup(
            PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaneldeInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PaneldeInfoLayout.createSequentialGroup()
                        .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                        .addComponent(CodL)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(CODtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(IDL)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tipoIDProveedorCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(IDtxt))
                                    .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                        .addComponent(RazonSocialL)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(RazonSocialtxt))))
                            .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                        .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(NroBoletoL)
                                            .addComponent(FechaL1))
                                        .addGap(18, 18, 18)
                                        .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Fechatxt, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                                            .addComponent(NroBoletotxt))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(SemanaL)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Semanatxt))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PaneldeInfoLayout.createSequentialGroup()
                                        .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                                .addComponent(KGBrutosL)
                                                .addGap(18, 18, 18)
                                                .addComponent(KGbrutostxt, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(TipoTransaccion))
                                        .addGap(18, 18, 18)
                                        .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                                .addComponent(KGNetosL)
                                                .addGap(18, 18, 18)
                                                .addComponent(KGNetostxt, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(16, 16, 16)
                                                .addComponent(MSL)
                                                .addGap(18, 18, 18)
                                                .addComponent(MStxt, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(ImpurezasL)
                                                .addGap(18, 18, 18)
                                                .addComponent(Impurezastxt, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                                            .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                                .addComponent(MPCB)
                                                .addGap(38, 38, 38)
                                                .addComponent(CuadrillaCB)
                                                .addGap(18, 18, 18)
                                                .addComponent(PeajeCB)
                                                .addGap(18, 18, 18)
                                                .addComponent(FleteCB)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(EstadoCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InfoBoletoL)
                                    .addComponent(USDdiaL1)
                                    .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ProveedoresCB, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(PaneldeInfoLayout.createSequentialGroup()
                        .addComponent(GuardarBT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HabilitarcambiosBT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SeleccionarBT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelarBT)
                        .addGap(12, 12, 12))))
        );
        PaneldeInfoLayout.setVerticalGroup(
            PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaneldeInfoLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ProveedoresCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PaneldeInfoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2))
                    .addGroup(PaneldeInfoLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tipoIDProveedorCB)
                                .addComponent(IDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(CodL)
                                .addComponent(CODtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(IDL)))
                        .addGap(18, 18, 18)
                        .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RazonSocialL)
                            .addComponent(RazonSocialtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(InfoBoletoL)
                .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PaneldeInfoLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PaneldeInfoLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(NroBoletoL))
                            .addComponent(NroBoletotxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FechaL1)
                            .addComponent(Fechatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SemanaL)
                            .addComponent(Semanatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(KGBrutosL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(KGbrutostxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(KGNetosL)
                            .addComponent(KGNetostxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MSL)
                            .addComponent(MStxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ImpurezasL)
                            .addComponent(Impurezastxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TipoTransaccion)
                            .addComponent(MPCB)
                            .addComponent(CuadrillaCB)
                            .addComponent(PeajeCB)
                            .addComponent(FleteCB))
                        .addGap(28, 28, 28))
                    .addGroup(PaneldeInfoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(5, 5, 5)))
                .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(EstadoCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(USDdiaL1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PaneldeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GuardarBT)
                    .addComponent(HabilitarcambiosBT)
                    .addComponent(SeleccionarBT)
                    .addComponent(CancelarBT))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(PaneldeInfo);

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    /*================================ ACCIONES AL CREARSE AL PANTALLA =====================================================*/
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        mostrarTodo();
        cargarInformacionBeneficiarios();
    }//GEN-LAST:event_formWindowOpened

   
    private void cargarInformacionBeneficiarios(){
        try {
            registros = Proveedor.cantidadProveedores();
            DataProveedores = Proveedor.conseguirDatosPrincipales_Total();
            for(int i = 0; i <= registros - 1; i++){
                
                String item = DataProveedores[i][1].toString();
                item += "   -   " + DataProveedores[i][2].toString();
                ProveedoresCB.addItem(item);
                
                //System.out.println(DataProveedores[i][1]);
                //System.out.println(DataProveedores[i][2]);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TransaccionesConsultarModificar1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked
        // TODO add your handling code here:
        fila = Tabla.rowAtPoint(evt.getPoint());
        if(fila > -1 && !SeleccionarBT.isSelected()){
           //SE OBTIENE LA INFO DEL BOLETO 
           COD_Transaccion = Integer.parseInt(String.valueOf(Tabla.getValueAt(fila, 0)));
           String codBoleto = String.valueOf(Tabla.getValueAt(fila, 1));  
           NroBoletotxt.setText(codBoleto);
           Semanatxt.setText(String.valueOf(Tabla.getValueAt(fila, 2)));
           Object[] InfoBoleto = new Object[10];
            try {
                InfoBoleto = B.conseguirDatos(codBoleto);
                Fechatxt.setText(InfoBoleto[2].toString());
                Float kgbruto = Float.parseFloat(InfoBoleto[4].toString());
                Float KGNetos = Float.parseFloat(InfoBoleto[5].toString());
                int ms = Integer.parseInt(InfoBoleto[6].toString());
                int impurezas = Integer.parseInt(InfoBoleto[7].toString());
                
                KGbrutostxt.setText(String.valueOf(kgbruto));
                KGNetostxt.setText(String.valueOf(KGNetos));
                MStxt.setText(String.valueOf(ms));
                Impurezastxt.setText(String.valueOf(impurezas));
            } catch (SQLException e) {
                Logger.getLogger(TransaccionesConsultarModificar1.class.getName()).log(Level.SEVERE, null, e);
            }
           
            String materiaprima = String.valueOf(Tabla.getValueAt(fila, 3));
            if (materiaprima.equals("SI")) {
                MPCB.setSelected(true);
            } else {
                MPCB.setSelected(false);
            }
            
            String Cuadriilla = String.valueOf(Tabla.getValueAt(fila, 4));
            if (Cuadriilla.equals("SI")) {
                CuadrillaCB.setSelected(true);
            } else {
                CuadrillaCB.setSelected(false);
            }
            
            String Flete = String.valueOf(Tabla.getValueAt(fila, 5));
            if (Flete.equals("SI")) {
                FleteCB.setSelected(true);
            } else {
                FleteCB.setSelected(false);
            }
            
            String Peaje = String.valueOf(Tabla.getValueAt(fila, 6));
            if (Peaje.equals("SI")) {
                PeajeCB.setSelected(true);
            } else {
                PeajeCB.setSelected(false);
            }
            
            String Status = String.valueOf(Tabla.getValueAt(fila, 7));
            if (Status.equals("No Procesada")) {
                EstadoCB.setSelectedIndex(0);
            } else {
                EstadoCB.setSelectedIndex(1);
            }
            
            Observacionestxt.setText(String.valueOf(Tabla.getValueAt(fila, 8)));
            
            //SE OBTIENEN LA INFORMACION DEL PROVEEDOR A PARTIR SW SU CODIGO
            String codigo = String.valueOf(Tabla.getValueAt(fila, 9));
            
            int cod = Integer.parseInt(codigo);
            Object[] DataInfo = new Object[3];
            
            try {
                
                DataInfo = Proveedor.InfoPrincipalXcodigo(cod);
                
                CODtxt.setText(DataInfo[0].toString());
                //Se obtiene el id
                String IDcompleto;
                IDcompleto = DataInfo[1].toString();
                char tipodID = IDcompleto.charAt(0);
                int tipoID2 = Proveedor.indexIdentificacion(tipodID);
                tipoIDProveedorCB.setSelectedIndex(tipoID2);
                //se Obtiene Razon social
                IDtxt.setText(IDcompleto.substring(1, IDcompleto.length()));
                RazonSocialtxt.setText(DataInfo[2].toString());
                
                for(int i = 0; i < registros; i++){
                    if(IDcompleto.equals(DataProveedores[i][1])){
                        ProveedoresCB.setSelectedIndex(i + 1);
                    }
                }
                
            } catch (SQLException e) {
                Logger.getLogger(TransaccionesConsultarModificar1.class.getName()).log(Level.SEVERE, null, e);

            }
        }
    }//GEN-LAST:event_TablaMouseClicked

    private void CancelarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarBTActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelarBTActionPerformed

    private void GuardarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarBTActionPerformed
        if(HabilitarcambiosBT.isSelected() && EstadoCB.getSelectedItem().toString().equals("No Procesadas")){
            //PROCEDEMOS PRIMERO A GUARDAR TODOS LOS CAMPOS
            /*
                LOS CAMPOS QUE PUEDO GUARDAR PARA CAMBIAR SON:
                - LAS TRANSACCIONES
                - EL CODIGO DE PROVEEDOR
            */
            int Codigo_Proveedor = Integer.parseInt(CODtxt.getText());
            String MP = "";
            String Cuadrilla = "";
            String Flete = "";
            String Peaje = "";
            
            if(MPCB.isSelected()){
                MP = "SI";
            } else {
                MP = "NO";
            }
            
            if(CuadrillaCB.isSelected()){
                Cuadrilla = "SI";
            } else {
                Cuadrilla = "NO";
            }
            
            if(FleteCB.isSelected()){
                Flete = "SI";
            } else {
                Flete = "NO";
            }
            
            if(PeajeCB.isSelected()){
                Peaje = "SI";
            } else {
                Peaje = "NO";
            }
            
            int COD_Transaccion = this.COD_Transaccion;
            try {
                int resp = JOptionPane.showConfirmDialog(null, "SE VA A PROCEDER A MODIFICAR LOS DATOS DE LA TRANSACCION\n"+"¿ESTA SEGURO?",
                "MODIFICACION DE TRANSACCION", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE/*El tipo de ventana, en este caso WARNING*/);
                if(resp == JOptionPane.YES_OPTION){
                    TransaccionesObject.updateTransaccion(Codigo_Proveedor, MP, Cuadrilla, Flete, Peaje, COD_Transaccion);
                    ReestablecerPag();
                }
            } catch (SQLException ex) {
                Logger.getLogger(TransaccionesConsultarModificar1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_GuardarBTActionPerformed

    
    
    private void SeleccionarBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionarBTActionPerformed
        if(!NroBoletotxt.getText().isEmpty() && SeleccionarBT.isSelected()){
            Tabla.setVisible(false);
            if(EstadoCB.getSelectedItem().toString().equals("No Procesadas")){
                HabilitarcambiosBT.setEnabled(true);
            }
        } else if(HabilitarcambiosBT.isSelected()){
            JOptionPane.showMessageDialog(null, "TIENE LA OPCION DE HABILITAR ACTIVADA, DESACTIVELA PRIMERO", "ERROR", JOptionPane.ERROR_MESSAGE);
            SeleccionarBT.setSelected(true);
        } else if(!HabilitarcambiosBT.isSelected() && NroBoletotxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR EN LA TABLA A UN PROVEEDOR", "ERROR", JOptionPane.ERROR_MESSAGE);
            SeleccionarBT.setSelected(false);
        } else if(!SeleccionarBT.isSelected()){
            Tabla.setVisible(true);
            HabilitarcambiosBT.setEnabled(false);
            
        }
    }//GEN-LAST:event_SeleccionarBTActionPerformed

    private void HabilitarcambiosBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HabilitarcambiosBTActionPerformed
        /*
            LOS DATOS A HABILITAR DEL BOLETO SON UNICAMENTE
            QUE TIPO DE TRANSACCION REALIZA
            Y CAMBIAR AL PROVEEDOR
            UNICAMENTE CUANDO SU CAMPO DE ESTADO ES NO PROCESADA
        */
        if(HabilitarcambiosBT.isSelected()){
            habilitarTransaccionesYproveedor();
            GuardarBT.setEnabled(true);
        } else if(!HabilitarcambiosBT.isSelected()){
            GuardarBT.setEnabled(false);
            deshabilitarTransaccionesYProveedor();
        }
    }//GEN-LAST:event_HabilitarcambiosBTActionPerformed

    private void ProveedoresCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProveedoresCBActionPerformed
        if(ProveedoresCB.getSelectedIndex() == 0 && HabilitarcambiosBT.isSelected()){
            CODtxt.setText("");
            IDtxt.setText("");
            tipoIDProveedorCB.setSelectedIndex(0);
            RazonSocialtxt.setText("");
        } else {
            int index = ProveedoresCB.getSelectedIndex();
            if(index != 0){
                imprimirDatosProveedor(index);
            }
        }
    }//GEN-LAST:event_ProveedoresCBActionPerformed
    
    private void imprimirDatosProveedor(int index){
        index--;
        CODtxt.setText(DataProveedores[index][0].toString());
        String identificacion = DataProveedores[index][1].toString();
        char caracter = identificacion.charAt(0);
        int index2 = Proveedor.indexIdentificacion(caracter);
        tipoIDProveedorCB.setSelectedIndex(index2);
        IDtxt.setText(identificacion.substring(1, identificacion.length()));
        RazonSocialtxt.setText(DataProveedores[index][2].toString());
    }
    
    private void habilitarTransaccionesYproveedor(){
        ProveedoresCB.setEnabled(true);
        MPCB.setEnabled(true);
        CuadrillaCB.setEnabled(true);
        FleteCB.setEnabled(true);
        PeajeCB.setEnabled(true);
    }
    
    private void deshabilitarTransaccionesYProveedor(){
        ProveedoresCB.setEnabled(false);
        MPCB.setEnabled(false);
        CuadrillaCB.setEnabled(false);
        FleteCB.setEnabled(false);
        PeajeCB.setEnabled(false);
    }
    
    private void mostrarTodo(){
        Object[][] datatabla;
        String[] columName = {"ID_Transaccion","Num# Boleto","Semana","MP","Cuadrilla","Flete","Peaje","Estatus","Observaciones","Cod.Proveedor"};
        try {
            datatabla = TransaccionesObject.getDatos();
            DefaultTableModel datos = new DefaultTableModel(datatabla, columName);
            Tabla.setModel(datos);
        } catch (SQLException e) {
            Logger.getLogger(TransaccionesConsultarModificar1.class.getName()).log(Level.SEVERE, null, e);
        }
    }
     
    private void updateTabla(){
        String[] columName = {"ID_Transaccion","Num# Boleto","Semana","MP","Cuadrilla","Flete","Peaje","Estatus","Observaciones","Cod.Proveedor"};
        try {
            DataTransacciones = TransaccionesObject.getDatos();
            DefaultTableModel datos = new DefaultTableModel(DataTransacciones,columName);
            Tabla.setModel(datos);
        } catch (SQLException e) {
            Logger.getLogger(TransaccionesConsultarModificar1.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    private void ReestablecerPag(){
        updateTabla();
        Tabla.setVisible(true);
        CODtxt.setText("");
        IDtxt.setText("");
        Fechatxt.setText("");
        KGNetostxt.setText("");
        KGbrutostxt.setText("");
        Impurezastxt.setText("");
        MStxt.setText("");
        NroBoletotxt.setText("");
        RazonSocialtxt.setText("");
        Semanatxt.setText("");
        Observacionestxt.setText("");
        SeleccionarBT.setEnabled(true);
        SeleccionarBT.setSelected(false);
        GuardarBT.setEnabled(false);
        HabilitarcambiosBT.setSelected(false);
        HabilitarcambiosBT.setEnabled(false);    
        deshabilitarTransaccionesYProveedor();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransaccionesConsultarModificar1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransaccionesConsultarModificar1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransaccionesConsultarModificar1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransaccionesConsultarModificar1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransaccionesConsultarModificar1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CODtxt;
    private javax.swing.JButton CancelarBT;
    private javax.swing.JLabel CodL;
    private javax.swing.JCheckBox CuadrillaCB;
    private javax.swing.JComboBox<String> EstadoCB;
    private javax.swing.JLabel FechaL1;
    private javax.swing.JTextField Fechatxt;
    private javax.swing.JCheckBox FleteCB;
    private javax.swing.JButton GuardarBT;
    private javax.swing.JToggleButton HabilitarcambiosBT;
    private javax.swing.JLabel IDL;
    private javax.swing.JTextField IDtxt;
    private javax.swing.JLabel ImpurezasL;
    private javax.swing.JTextField Impurezastxt;
    private javax.swing.JLabel InfoBoletoL;
    private javax.swing.JLabel KGBrutosL;
    private javax.swing.JLabel KGNetosL;
    private javax.swing.JTextField KGNetostxt;
    private javax.swing.JTextField KGbrutostxt;
    private javax.swing.JCheckBox MPCB;
    private javax.swing.JLabel MSL;
    private javax.swing.JTextField MStxt;
    private javax.swing.JLabel NroBoletoL;
    private javax.swing.JTextField NroBoletotxt;
    private javax.swing.JTextArea Observacionestxt;
    private javax.swing.JPanel PaneldeInfo;
    private javax.swing.JCheckBox PeajeCB;
    private javax.swing.JComboBox<String> ProveedoresCB;
    private javax.swing.JLabel RazonSocialL;
    private javax.swing.JTextField RazonSocialtxt;
    private javax.swing.JToggleButton SeleccionarBT;
    private javax.swing.JLabel SemanaL;
    private javax.swing.JTextField Semanatxt;
    private javax.swing.JTable Tabla;
    private javax.swing.JLabel TipoTransaccion;
    private javax.swing.JLabel USDdiaL1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> tipoIDProveedorCB;
    // End of variables declaration//GEN-END:variables
}
